[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "arcgaz_genome",
    "section": "",
    "text": "Index"
  },
  {
    "objectID": "qmd/inspect_alignments.html",
    "href": "qmd/inspect_alignments.html",
    "title": "1  “Inspec genome alignments”",
    "section": "",
    "text": "toggle code\nlibrary(tidyverse)\nlibrary(prismatic)\nlibrary(ggtext)\nlibrary(circlize)\nlibrary(glue)\nlibrary(patchwork)\n\nfnt_sel <- \"TeX Gyre Pagella\"\n# clrs <- ghibli::ghibli_palette(name = \"TotoroMedium\")[c(5,6)]\nclrs <- c( clr_darken(\"#db4a32\",.3),\n           clr_darken(\"#66c2a5\",.3))\n\nread_size <- \\(genome = \"\", y_base = 0){\n  read_tsv(here::here(\"data\", \"genomes\", str_c(genome,\".size\")),\n           col_names = c(\"chr\", \"size\")) |> \n    arrange(-size) |> \n    mutate(size_idx = row_number(),\n           end = cumsum(size),\n           start = lag(end,default =  0),\n           eo = size_idx %% 2,\n           y_base = y_base,\n           genome = genome)\n}\n\ngenomes <- c(\"arcgaz_dt_h1\",\n             \"arcgaz_dt_h2\",\n             \"arcgaz_v1\",\n             \"zalcal_v1\")\n\nsizes <- tibble(genome = genomes,\n       y_base = 0:3) |> \n  pmap_dfr(read_size)\n\ngenome_summary <- sizes |> \n  group_by(genome, y_base) |> \n  summarise(n = n(),\n            toal_length = max(end))\n\ng_height <- .8\n\nalign_min_length <- 3e5\n\nn_largest <- 37\nsizes |> \n  filter(size_idx < n_largest) |> \n  ggplot() +\n  geom_linerange(data = tibble(end = align_min_length),\n                 aes(y = .9, xmin = 0, xmax = end ), size = 1.5) +\n  geom_rect(data = genome_summary,\n            aes(xmin = 0, xmax = toal_length,\n                ymin = y_base, ymax = y_base + g_height),\n            color = \"gray50\", fill = \"gray90\") +\n  geom_rect(aes(xmin = start, xmax = end,\n                ymin = y_base, ymax = y_base + g_height,\n                color = factor(eo),\n                fill = after_scale(clr_lighten(color, .5)))) +\n  geom_richtext(data = genome_summary,\n                aes(y = y_base + .5 * g_height,\n                    label = glue(\"{genome}<br>n: {n}\"),\n                    x = -.1e9),hjust = 1,\n                fill = NA, label.color = NA, family = fnt_sel,\n                label.padding = grid::unit(rep(0, 4), \"pt\")) + \n  scale_y_continuous(NULL) +\n  scale_x_continuous(NULL, breaks = c(0:3)*1e9,\n                     labels = str_c(0:3, \" Gb\")) + \n  scale_color_manual(values = clrs, guide = \"none\") +\n  coord_cartesian(xlim = c(-5e8, 2.6e9),\n                  ylim = c(-.1, 4),\n                  expand = 0)+\n  # coord_polar() +\n  theme_minimal(base_family = fnt_sel) +\n  theme(panel.grid = element_blank(),\n        axis.text.y = element_blank(),\n        axis.ticks.x = element_line(linewidth = .2),\n        axis.ticks.length = unit(-4,\"pt\"))\n\n\n\n\n\ntoggle code\nget_psl <- \\(file){\n  vroom::vroom(here::here(\"results\",\"psl\", file),\n               delim = \"\\t\",\n           col_names = c(\"matches\", \"misMatches\", \"repMatches\", \"nCount\",\n                         \"qNumInsert\", \"qBaseInsert\", \"tNumInsert\",\n                         \"tBaseInsert\", \"strand\", \"qName\", \"qSize\", \"qStart\",\n                         \"qEnd\", \"tName\", \"tSize\", \"tStart\", \"tEnd\",\n                         \"blockCount\")) |> \n    select( tName, tStart, tEnd, qName, qStart, qEnd, strand ) |> \n    mutate(tSize = tEnd - tStart,\n           qSize = qEnd - qStart)\n}\n\nsimplify_names <- \\(str){\n  str_remove_all(str, \";.*\") |> \n    str_replace(\"ScDpJTZ_\", \"A.\") |> \n    str_replace(\"NC_045\", \"Z.\") |> \n    str_replace(\"NW_0233655\", \"Z.\") |> \n    str_replace(\"ScWAj4l_\", \"V1.\")\n}\n\ninspect_alignment <- \\(aln_name = \"zalcal_v1\", n_alignments = 5e2){\n  z_psl <- get_psl(glue(\"{aln_name}_1-18.psl.gz\"))\n  \n  sizes_az <- sizes |>\n    filter(size_idx < n_largest,\n           genome %in% c(\"arcgaz_dt_h1\", aln_name)) |> \n    mutate(l_start = 0,\n           chr = simplify_names(chr)) |> \n    select(chr, start = l_start, end = size, genome)\n  \n  z_psl_above <- z_psl |> \n    arrange(-tSize) |> \n    head(n_alignments) |> \n    # filter(tSize > align_min_length) |> \n    mutate(tName = simplify_names(tName),\n           qName = simplify_names(qName)) |> \n    filter(tName %in% sizes_az$chr,\n           qName %in% sizes_az$chr)\n  \n  p1 <- z_psl_above |> \n    ggplot() +\n    geom_density(aes(x = tSize), adjust = .1,\n                 color = clrs[1], fill = clr_alpha(clrs[1])) +\n    geom_density(aes(x = qSize, y = -..density..),adjust = .1,\n                 color = clrs[2], fill = clr_alpha(clrs[2])) +\n    theme_minimal(base_family = fnt_sel)\n  \n  chr_sel <- sizes_az |> \n    filter(genome != genomes[[1]]) |> \n    pluck(\"chr\")\n  \n  chr_sel_a <- sizes_az |> \n    filter(genome == genomes[[1]]) |> \n    pluck(\"chr\")\n  chr_f <- factor(chr_sel, levels = chr_sel)\n  n_chr <- length(chr_sel)\n  \n  clr_al <- \\(str){\n    str_ramp <- ((factor(str, levels = levels(chr_f)) |> \n                    as.integer()) -1) / (n_chr - 1)\n    \n    scales::colour_ramp(colors = c(clrs[1],\"gray30\", clrs[2], \"black\",\"black\"))(str_ramp)\n  }\n  \n  clrs_c <- c(rep(\"gray30\", sizes_az |>  filter(grepl(\"A\", chr)) |> nrow()),\n              clr_al(sizes_az |>  filter(!grepl(\"A\", chr)) |> pluck(\"chr\")))\n  # c(clrs) |> \n  #   set_names(nm = genomes[c(1,4)])\n  \n  plot.new()\n  circos.clear()\n  col_text <- \"white\"\n    circos.par(\"track.height\" = 0.8,\n               gap.degree = .25,\n               cell.padding=c(0, 0, 0, 0))\n    circos.initialize(factors = sizes_az$chr, \n                      xlim = sizes_az[,2:3] |>\n                        as.matrix())\n    \n    # genomes\n    circos.track(ylim=c(0, 1), \n                 panel.fun=function(x, y) {\n                   chr=CELL_META$sector.index\n                   xlim=CELL_META$xlim\n                   ylim=CELL_META$ylim\n                   circos.text(mean(xlim), mean(ylim), chr, cex=0.5, col=col_text, \n                               facing = \"bending.inside\",\n                               niceFacing = TRUE,\n                               family = fnt_sel)},\n                 bg.col= clrs_c,\n                 bg.border = FALSE, \n                 track.height = 0.06)\n    \n    # genomes x axis\n    x_scale <- 1e6\n    brk <- c(0, 0.5, 1, 1.5, 2)*x_scale * 100\n    circos.track(track.index = get.current.track.index(), \n                 panel.fun=function(x, y) {\n                   circos.axis(h=\"top\",\n                               major.at=brk,\n                               labels = round(brk/x_scale, 1), \n                               labels.cex = 0.4,\n                               col = \"black\", labels.col=\"black\",\n                               lwd = 0.7, labels.facing=\"clockwise\")\n                 },\n                 bg.border = FALSE)\n    \n    circos.genomicLink(z_psl_above[1:3], z_psl_above[4:6],\n                       col = clr_alpha(clr_al( z_psl_above$qName),.4))\n    \n    p2 <- recordPlot()\n\n    z_psl_in_top_length <- z_psl |>\n      mutate(tName = simplify_names(tName),\n             qName = simplify_names(qName)) |>\n      filter(tName %in% sizes_az$chr,\n             qName %in% sizes_az$chr)\n\n    z_psl_matrix <- z_psl_in_top_length |>\n      group_by(tName, qName) |>\n      summarize(n = n(),\n                alignment_length = sum(tSize)) |>\n      ungroup() |>\n      left_join(sizes_az |> select(qName = chr, qSize = end)) |>\n      left_join(sizes_az |> select(tName = chr, tSize = end)) |>\n      mutate(tName = factor(tName, chr_sel_a),\n             qName = factor(qName, chr_sel),\n             t_aling_fract = alignment_length / tSize,\n             q_aling_fract = alignment_length / qSize)\n\n    p3 <- z_psl_matrix |>\n      ggplot(aes(x = tName, y = qName)) +\n      geom_tile(aes(fill = t_aling_fract,\n                    width = (.5 + t_aling_fract) / 2,\n                    height = after_stat(width),\n                    color = after_scale(clr_darken(fill)))) +\n      # scale_fill_manual(values = rev(clrs)) +\n      scale_fill_gradientn(colours = c(\"gray90\", clrs[2] , \"black\")) +\n      guides(fill = guide_colorbar(\"Alginment Fraction (Target)\",\n                                   title.position = \"top\",\n                                   barwidth = unit(.4,\"npc\"),\n                                   barheight = unit(5,\"pt\"))) +\n      coord_equal() +\n      theme_minimal(base_family = fnt_sel) +\n      theme(axis.text.x = element_text(angle = 90),\n            legend.position = \"bottom\")\n\n    p4 <- z_psl_matrix |>\n      ggplot(aes(x = tName, y = qName)) +\n      geom_tile(aes(fill = q_aling_fract,\n                    width = (.5 + q_aling_fract) / 6,\n                    height = after_stat(width),\n                    color = after_scale(clr_darken(fill)))) +\n      # scale_fill_manual(values = rev(clrs)) +\n      scale_fill_gradientn(colours = c(\"gray90\", clrs[1] , \"black\")) +\n      guides(fill = guide_colorbar(\"Alginment Fraction (Querry)\",\n                                   title.position = \"top\",\n                                   barwidth = unit(.4,\"npc\"),\n                                   barheight = unit(5,\"pt\"))) +\n      coord_equal() +\n      theme_minimal(base_family = fnt_sel) +\n      theme(axis.text.x = element_text(angle = 90),\n            legend.position = \"bottom\")\n\n    p5 <- p3 / p4\n\n    tibble(alignment = aln_name,\n           sizes = list(p1),\n           circ = list(p2),\n           matrix = list(p5))\n}\n\n\n\n\ntoggle code\ninspections$sizes[[1]] |\n  inspections$sizes[[2]]\n\n\n\n\n\n\n\ntoggle code\ninspections$circ[[1]]\ninspections$circ[[2]]\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ntoggle code\ninspections$matrix[[1]] |\n  inspections$matrix[[2]]"
  }
]