[
  {
    "objectID": "qmd/inspect_initial_alignments.html",
    "href": "qmd/inspect_initial_alignments.html",
    "title": "2  Inspect initial genome alignments",
    "section": "",
    "text": "toggle code\nlibrary(tidyverse)\nlibrary(prismatic)\nlibrary(ggtext)\nlibrary(circlize)\nlibrary(glue)\nlibrary(patchwork)\nlibrary(here)\nsource(here(\"R/plot_defaults.R\"))\nsource(here(\"R/cartesian_alignment_helpers.R\"))\n\n# read_size <- \\(genome = \"\", y_base = 0){\n#   read_tsv(here::here(\"results\", \"genome\", str_c(genome,\".size\")),\n#            col_names = c(\"chr\", \"size\")) |> \n#     arrange(-size) |> \n#     mutate(size_idx = row_number(),\n#            end = cumsum(size),\n#            start = lag(end,default =  0),\n#            eo = size_idx %% 2,\n#            y_base = y_base,\n#            genome = genome)\n# }\n\ngenomes <- c(\"arcgaz_dt_h1_hardmasked\",\n             \"arcgaz_dt_h2_hardmasked\",\n             \"arcgaz_v3_hardmasked\")\n\nsizes <- tibble(genome = genomes,\n                y_base = seq_along(genomes)-1) |> \n  pmap_dfr(read_size)\n\ngenome_summary <- sizes |> \n  group_by(genome, y_base) |> \n  summarise(n = n(),\n            toal_length = max(end))\n\ng_height <- .8\nalign_min_length <- 3e5\n\n\n\n\ntoggle code\nn_largest <- 37\nsizes |> \n  filter(size_idx < n_largest) |> \n  ggplot() +\n  geom_linerange(data = tibble(end = align_min_length),\n                 aes(y = .9, xmin = 0, xmax = end ), size = 1.5) +\n  geom_rect(data = genome_summary,\n            aes(xmin = 0, xmax = toal_length,\n                ymin = y_base, ymax = y_base + g_height),\n            color = \"gray50\", fill = \"gray90\") +\n  geom_rect(aes(xmin = start, xmax = end,\n                ymin = y_base, ymax = y_base + g_height,\n                color = factor(eo),\n                fill = after_scale(clr_lighten(color, .5)))) +\n  geom_richtext(data = genome_summary,\n                aes(y = y_base + .5 * g_height,\n                    label = glue(\"{str_remove(genome, '_hardmasked')}<br>n: {n}\"),\n                    x = -.1e9),hjust = 1,\n                fill = NA, label.color = NA, family = fnt_sel,\n                label.padding = grid::unit(rep(0, 4), \"pt\")) + \n  scale_y_continuous(NULL) +\n  scale_x_continuous(NULL, breaks = c(0:3)*1e9,\n                     labels = str_c(0:3, \" Gb\")) + \n  scale_color_manual(values = clrs |> clr_lighten(.2) |> clr_desaturate(), guide = \"none\") +\n  coord_cartesian(xlim = c(-4.5e8, 2.6e9),\n                  ylim = c(-.1, length(genomes)),\n                  expand = 0)+\n  # coord_polar() +\n  labs(title = \"pre-anchoring genomes\", \n       subtitle = \"(scaffolds sorted by size)\") +\n  theme_minimal(base_family = fnt_sel) +\n  theme(panel.grid = element_blank(),\n        axis.text.y = element_blank(),\n        axis.ticks.x = element_line(linewidth = .2),\n        axis.ticks.length = unit(-4,\"pt\"),\n        plot.title = element_text(hjust = .5),\n        plot.subtitle = element_text(hjust = .5))\n\n\n\n\n\n\n\ntoggle code\nclr_genome = \"gray50\"\ngenome_width <- .05\nskip <- .025\n\nmanual_order_18 <- list(c(14,9,12,4, 17,13,10,2,1,18,11,15,7,5,8,3,16,6),\n                        c( 18, 28, 33, 19, 24,\n                           26, 8, 15, 5, 1,\n                           23, 29, 22, 13, 16,\n                           36, 12, 27, # ----\n                           6, 4,\n                           21, 9, 25, 17, 34,\n                           10, 20, 31, 30, 2,\n                           14, 11, 32, 35, 7,\n                           3),\n                        c( 29, 33, 19, 24, 26, 1, 7, 9, 18, 12, 4, 8, 23, 31, 22,  5, 16, 17, #-----\n                           3, 35, 21, 13, 10, 25, 28, 30, 34, 20, 2, 14, 11, 32, 36, 27,6, 15)) |>\n  set_names(nm = c( \"arcgaz_v3_hardmasked\", \"arcgaz_dt_h1_hardmasked\", \"arcgaz_dt_h2_hardmasked\"));\n\nall_alignments <- tibble(genomes = list(c(\"arcgaz_v3_hardmasked\", \"arcgaz_dt_h1_hardmasked\"),\n                                        c(\"arcgaz_v3_hardmasked\", \"arcgaz_dt_h2_hardmasked\")),\n                         n_first = list(c(18,36), c(18,36))) |>\n  pmap_dfr(import_alignment,\n          genome_width = genome_width,\n          skip = skip,\n          manual_order_18 = manual_order_18,\n          n_longest = 25)\n# p1 <- \n\n  all_alignments |>\n  unnest(cols = psl_diag) |>\n  ggplot() +\n  facet_grid(querry ~ .,switch = \"y\") +\n  geom_diagonal_wide(aes(x = y,\n                         y = x,\n                         group = str_c(querry, \"_\" ,group),\n                         color = factor(dir),\n                         fill = after_scale(clr_lighten(color))),\n                     orientation = \"y\", linewidth = plt_lwd)  +\n  geom_linerange(data = all_alignments |> unnest(genome_with_skips),\n                 aes(xmin = start, xmax = end, y = y),\n                 color = clr_genome,\n                 linewidth = .5 * plt_lwd) +\n  geom_rect(data = all_alignments |> unnest(sizes_18),\n            aes(xmin = start, xmax = end,\n                ymin = y_base + (label_sign * skip),\n                ymax = y_base + (label_sign * (skip + genome_width))),\n            color = clr_genome, fill = clr_lighten(clr_genome,.75),\n            linewidth = .5 * plt_lwd) +\n  # geom_text(data = all_alignments |> unnest(sizes_18),\n  #           aes(x = mid, y = y_base, label = str_c(size_idx,\"\\n\",pre_manual))) +\n  # geom_ribbon(data = all_alignments |> unnest(data_cov_windowed),\n  #             aes(x = gg_mid, group = seqnames,\n  #                 ymin = (genome_idx -1) + 2 * skip *(genome_idx - 1.5) + genome_width *(genome_idx - 2),\n  #                 ymax = (genome_idx -1) + 2 * skip *(genome_idx - 1.5) + genome_width *(genome_idx - 2) +  genome_width * avg_cov_25),\n  #             linewidth = plt_lwd,\n  #             fill = clr_genome) +\n  geom_text(data = all_alignments |> unnest(sizes_18),\n            aes(x = mid,\n                y = y_base + (label_sign *  (4.3 * skip + genome_width)),\n                label = simplify_names(chr)#,\n                # hjust = c(1, 0)[as.numeric(factor(label_sign))]\n                ),\n            color = \"black\",\n            family = fnt_sel,\n            size = .35 * fnt_sz * 2,\n            angle = 90)  +\n  scale_x_continuous(expand = c(0, 0)) +\n  coord_cartesian(ylim = c(-.2, 1.25),\n                  xlim = c(-1e7, max((all_alignments |> unnest(sizes_18))$end_with_skip)),\n                  clip = \"off\") +\n  scale_color_manual(values = clrs |> clr_alpha(.3)) +\n  theme_void(base_family = fnt_sel) +\n  theme(legend.position = \"none\",\n        strip.text = element_text(angle = 90))\n\n\n\n\n\n\n\ntoggle code\nmatrix_plots <- all_alignments |> \n  pmap_dfr(psl_matrix) |>\n  arrange(target, querry) |> \n  pmap_dfr(plot_matrix,\n           cmin = 0,\n           cmax = 1.2,\n           tile_scl = 1,\n           tile_min_sz = .02)\n\nwrap_plots(matrix_plots$p,\n           nrow = 1, guides = \"collect\") &\n  theme(legend.position = \"bottom\")\n\n\n\n\n\n```"
  },
  {
    "objectID": "qmd/inspect_anchored_alignments.html",
    "href": "qmd/inspect_anchored_alignments.html",
    "title": "4  Inspect anchored genome alignments",
    "section": "",
    "text": "toggle code\nlibrary(tidyverse)\nlibrary(prismatic)\nlibrary(ggtext)\nlibrary(circlize)\nlibrary(glue)\nlibrary(patchwork)\nlibrary(here)\nsource(here(\"R/plot_defaults.R\"))\nsource(here(\"R/cartesian_alignment_helpers.R\"))\n\ngenomes <- c(\"arcgaz_anc_h1\",\n             \"arcgaz_anc_h2\",\n             \"arcgaz_v3_hardmasked\",\n             \"zalcal_v1\")\n\nsizes <- tibble(genome = genomes,\n                y_base = seq_along(genomes)-1) |> \n  pmap_dfr(read_size)\n\ngenome_summary <- sizes |> \n  group_by(genome, y_base) |> \n  summarise(n = n(),\n            toal_length = max(end))\n\ng_height <- .8\nalign_min_length <- 3e5\n\n\n\n\ntoggle code\nn_largest <- 18\nsizes |> \n  filter(size_idx < n_largest) |> \n  ggplot() +\n  geom_linerange(data = tibble(end = align_min_length),\n                 aes(y = .9, xmin = 0, xmax = end ), size = 1.5) +\n  geom_rect(data = genome_summary,\n            aes(xmin = 0, xmax = toal_length,\n                ymin = y_base, ymax = y_base + g_height),\n            color = \"gray50\", fill = \"gray90\") +\n  geom_rect(aes(xmin = start, xmax = end,\n                ymin = y_base, ymax = y_base + g_height,\n                color = factor(eo),\n                fill = after_scale(clr_lighten(color, .5)))) +\n  geom_richtext(data = genome_summary,\n                aes(y = y_base + .5 * g_height,\n                    label = glue(\"{str_remove(genome, '_hardmasked')}<br>n: {n}\"),\n                    x = -.1e9),hjust = 1,\n                fill = NA, label.color = NA, family = fnt_sel,\n                label.padding = grid::unit(rep(0, 4), \"pt\")) + \n  scale_y_continuous(NULL) +\n  scale_x_continuous(NULL, breaks = c(0:3)*1e9,\n                     labels = str_c(0:3, \" Gb\")) + \n  scale_color_manual(values = clrs |> clr_lighten(.2) |> clr_desaturate(), guide = \"none\") +\n  coord_cartesian(xlim = c(-4.5e8, 2.6e9),\n                  ylim = c(-.1, length(genomes)),\n                  expand = 0)+\n  # coord_polar() +\n  labs(title = \"anchored genomes\", \n       subtitle = \"(scaffolds sorted by size)\") +\n  theme_minimal(base_family = fnt_sel) +\n  theme(panel.grid = element_blank(),\n        axis.text.y = element_blank(),\n        axis.ticks.x = element_line(linewidth = .2),\n        axis.ticks.length = unit(-4,\"pt\"),\n        plot.title = element_text(hjust = .5),\n        plot.subtitle = element_text(hjust = .5))\n\n\n\n\n\n\n\ntoggle code\nclr_genome = \"gray50\"\ngenome_width <- .05\nskip <- .025\n\nmanual_order_18 <- list(c(14, 9, 12, 4, 13, 10, 17, 1, 2, 11, 15, 7, 18, 5, 8, 3, 16, 6),\n                        c(14, 9, 12, 4, 13, 10, 17, 2, 1, 15, 11, 7, 18, 5, 8, 3, 6, 16),\n                        c(14, 9, 12, 4, 17, 13, 10, 2, 1, 18, 11, 15, 7, 5, 8, 3, 16, 6),\n                        c(14, 9, 12, 4, 17, 13, 10, 2, 1, 18, 11, 15, 7, 5, 8, 3, 16, 6),\n                        c(14, 9, 12, 4, 17, 10, 13, 2, 1, 18, 15, 11, 7, 5, 8, 3, 16, 6)) |>\n  set_names(nm = c( \"arcgaz_anc_h1\", \"arcgaz_anc_h2\",\n                    \"arcgaz_v3_hardmasked\", \"arcgaz_v3\",\n                    \"zalcal_v1\")); \n\nall_alignments <- tibble(genomes = list(c(\"arcgaz_anc_h2\", \"arcgaz_anc_h1\"),\n                                        c(\"arcgaz_anc_h2\", \"arcgaz_v3_hardmasked\"),\n                                        c(\"arcgaz_anc_h2\", \"zalcal_v1\"),\n                                        c(\"arcgaz_anc_h1\", \"arcgaz_v3\"),\n                                        c(\"arcgaz_anc_h1\", \"zalcal_v1\"))) |>\n  pmap_dfr(import_alignment,\n           genome_width = genome_width,\n           skip = skip,\n           manual_order_18 = manual_order_18,\n           n_longest = 25)\n# p1 <- \nall_alignments |>\n  unnest(cols = psl_diag) |>\n  ggplot() +\n  facet_grid(target + querry ~ .,switch = \"y\") +\n  geom_diagonal_wide(aes(x = y,\n                         y = x,\n                         group = str_c(querry, \"_\", target,\"_\",group),\n                         color = factor(dir),\n                         fill = after_scale(clr_lighten(color))),\n                     orientation = \"y\", linewidth = plt_lwd)  +\n  geom_linerange(data = all_alignments |> unnest(genome_with_skips),\n                 aes(xmin = start, xmax = end, y = y),\n                 color = clr_genome,\n                 linewidth = .5 * plt_lwd) +\n  geom_rect(data = all_alignments |> unnest(sizes_18),\n            aes(xmin = start, xmax = end,\n                ymin = y_base + (label_sign * skip),\n                ymax = y_base + (label_sign * (skip + genome_width))),\n            color = clr_genome, fill = clr_lighten(clr_genome,.75),\n            linewidth = .5 * plt_lwd) +\n  # geom_text(data = all_alignments |> unnest(sizes_18),\n  #           aes(x = mid, y = y_base, label = str_c(size_idx,\"\\n\",pre_manual))) +\n  # geom_ribbon(data = all_alignments |> unnest(data_cov_windowed),\n  #             aes(x = gg_mid, group = seqnames,\n  #                 ymin = (genome_idx -1) + 2 * skip *(genome_idx - 1.5) + genome_width *(genome_idx - 2),\n  #                 ymax = (genome_idx -1) + 2 * skip *(genome_idx - 1.5) + genome_width *(genome_idx - 2) +  genome_width * avg_cov_25),\n  #             linewidth = plt_lwd,\n  #             fill = clr_genome) +\n  geom_text(data = all_alignments |> unnest(sizes_18),\n            aes(x = mid,\n                y = y_base + (label_sign *  (4.3 * skip + genome_width)),\n                label = simplify_names(chr)#,\n                # hjust = c(1, 0)[as.numeric(factor(label_sign))]\n            ),\n            color = \"black\",\n            family = fnt_sel,\n            size = .35 * fnt_sz * 2,\n            angle = 0)  +\n  scale_x_continuous(expand = c(0, 0)) +\n  coord_cartesian(ylim = c(-.2, 1.25),\n                  xlim = c(-1e7, max((all_alignments |> unnest(sizes_18))$end_with_skip)),\n                  clip = \"off\") +\n  scale_color_manual(values = clrs |> clr_alpha(.3)) +\n  theme_void(base_family = fnt_sel) +\n  theme(legend.position = \"none\",\n        strip.text = element_text(angle = 90))\n\n\n\n\n\n\n\ntoggle code\nmatrix_plots <- all_alignments |> \n  pmap_dfr(psl_matrix) |>\n  arrange(target, querry) |> \n  pmap_dfr(plot_matrix,\n           cmin = 0,\n           cmax = 1.2,\n           tile_scl = 1,\n           tile_min_sz = .02)\n\nwrap_plots(matrix_plots$p,\n           nrow = 1, guides = \"collect\") &\n  theme(legend.position = \"bottom\")"
  },
  {
    "objectID": "qmd/rna_sample_selection.html",
    "href": "qmd/rna_sample_selection.html",
    "title": "5  RNA sample selection",
    "section": "",
    "text": "toggle code\nlibrary(tidyverse)\nlibrary(patchwork)\nlibrary(prismatic)\nlibrary(here)\nsource(here(\"R/plot_defaults.R\"))\n\nset.seed(22)\nclr1 <-  \"gray20\";  clr2 <-  \"gray50\"\n\n\ndata <- read_tsv(here::here(\"data/rna/multiqc_general_stats.txt\")) |> \n  filter(Sample != \"multiqc\") |> \n  rename_with(\\(x){str_remove_all(x, \"FastQC_mqc-generalstats-fastqc-|Snippy_mqc-generalstats-snippy-\")}) |> \n  mutate(pair = str_sub(Sample, 1,-3),\n         mate = str_sub(Sample, -1,-1)) |> \n  select(-Sample) |> \n  pivot_wider(names_from = mate,id_cols = pair, values_from = percent_duplicates:total_sequences) |> \n  mutate(pair = fct_reorder(pair, total_sequences_1)) |> \n  arrange(total_sequences_1) |> \n  separate(pair, into = c(\"sample_id\", \"beach\", \"stage\", \"timepoint\", \"year\"),\n           sep = \"_\",remove = FALSE)\n\nselected_pairs <- data |> \n  filter(!is.na(stage)) |> \n  group_by(beach, stage, .drop = FALSE) |>\n  sample_n(size = 5) |>\n  filter(!(stage == \"pup\" & beach == \"FWB\" & row_number() == 5)) |>\n  pluck('pair')\n\ndata <- data |> \n  mutate(select = pair %in% selected_pairs)\n\n\nChecking the total number of sequences selected (at select is TRUE)\n\n\ntoggle code\n# The upper limit is 600M pairs of reads to avoi\ndata |> \n  group_by(select) |> \n  summarise(n_seqs = sum(total_sequences_1) * 1e-6)\n\n\n# A tibble: 2 × 2\n  select n_seqs\n  <lgl>   <dbl>\n1 FALSE   4026.\n2 TRUE     596.\n\n\nChecking selection across different beaches and age classes\n\n\ntoggle code\ndata |> \n  group_by(select, beach, stage, .drop = FALSE) |> \n  summarise(n_seqs = sum(total_sequences_1) * 1e-6,\n            n = n(), .drop = FALSE)\n\n\n# A tibble: 8 × 6\n# Groups:   select, beach [6]\n  select beach stage n_seqs     n .drop\n  <lgl>  <chr> <chr>  <dbl> <int> <lgl>\n1 FALSE  C21A  <NA>    24.9     1 FALSE\n2 FALSE  F21A  <NA>    24.8     1 FALSE\n3 FALSE  FWB   mum   2008.     51 FALSE\n4 FALSE  FWB   pup   1213.     28 FALSE\n5 FALSE  SSB   pup    755.     19 FALSE\n6 TRUE   FWB   mum    158.      5 FALSE\n7 TRUE   FWB   pup    209.      4 FALSE\n8 TRUE   SSB   pup    228.      5 FALSE\n\n\nVisual check:\n\n\ntoggle code\np1 <- data |> \n  ggplot() +\n  ggstance::geom_barh(aes(y = pair, x = total_sequences_1 * 1e-6,\n                          color = select, fill = after_scale(clr_alpha(color))),\n                      stat = 'identity', linewidth= .5, show.legend =  'none')+\n  labs(x = \"number of sequences (Mil)\") +\n  coord_cartesian(xlim = c(0, 70))\n\np2 <- data |> \n  # names()\n  ggplot(aes(x = total_sequences_1 * 1e-6,  color = select)) +\n  geom_histogram(linewidth= .5,bins = 17, \n                 aes(group = select, fill = after_scale(clr_alpha(color))),\n                 show.legend =  'none') +\n  labs(x = \"number of sequences (Mil)\") +\n  coord_cartesian(xlim = c(0, 70))\n\np2 / p1 + plot_layout(heights = c(.3, 1)) & scale_color_manual(values = clrs, guide = \"none\") & theme_minimal(base_family = fnt_sel) \n\n\n\n\n\nSelected Individuals\n\n\ntoggle code\ndata |>\n  filter(select) |>\n  select(pair:year, total_sequences_1) |> \n  arrange(beach, stage, timepoint) |> \n  knitr::kable()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\npair\nsample_id\nbeach\nstage\ntimepoint\nyear\ntotal_sequences_1\n\n\n\n\nF7_FWB_mum_end_2018B\nF7\nFWB\nmum\nend\n2018B\n21647808\n\n\nFWB17_FWB_mum_end_2019B\nFWB17\nFWB\nmum\nend\n2019B\n37893142\n\n\nFWB6_FWB_mum_end_2019B\nFWB6\nFWB\nmum\nend\n2019B\n43409991\n\n\nF9_FWB_mum_start_2018B\nF9\nFWB\nmum\nstart\n2018B\n21228945\n\n\nF8_FWB_mum_start_2018B\nF8\nFWB\nmum\nstart\n2018B\n34213387\n\n\nC7_FWB_pup_end_2018B\nC7\nFWB\npup\nend\n2018B\n43604218\n\n\nC1_FWB_pup_end_2018B\nC1\nFWB\npup\nend\n2018B\n66836626\n\n\nC5_FWB_pup_start_2018B\nC5\nFWB\npup\nstart\n2018B\n32171457\n\n\nC11_FWB_pup_start_2018B\nC11\nFWB\npup\nstart\n2018B\n66712384\n\n\nH19_SSB_pup_end_2018B\nH19\nSSB\npup\nend\n2018B\n17254508\n\n\nH18_SSB_pup_start_2018B\nH18\nSSB\npup\nstart\n2018B\n36548368\n\n\nH16_SSB_pup_start_2018B\nH16\nSSB\npup\nstart\n2018B\n44305419\n\n\nH3_SSB_pup_start_2018B\nH3\nSSB\npup\nstart\n2018B\n64298207\n\n\nH13_SSB_pup_start_2018B\nH13\nSSB\npup\nstart\n2018B\n65665412"
  },
  {
    "objectID": "qmd/references.html",
    "href": "qmd/references.html",
    "title": "6  References",
    "section": "",
    "text": "Peart, Claire R., Christina Williams, Saurabh D. Pophaly, Benjamin A.\nNeely, Frances M. D. Gulland, David J. Adams, Bee Ling Ng, et al. 2021.\n“Hi-C Scaffolded Short- and Long-Read Genome\nAssemblies of the California Sea Lion Are Broadly\nConsistent for Syntenic Inference Across 45 Million Years of\nEvolution.” Molecular Ecology Resources 21 (7): 2455–70.\nhttps://doi.org/10.1111/1755-0998.13443."
  },
  {
    "objectID": "qmd/anchoring_assessment.html",
    "href": "qmd/anchoring_assessment.html",
    "title": "3  Anchoring Assessment",
    "section": "",
    "text": "toggle code\nlibrary(tidyverse)\nlibrary(prismatic)\nlibrary(patchwork)\nlibrary(glue)\nlibrary(here)\nsource(here(\"R/anchoring_assesment.R\"))\n\n\n\n\ntoggle code\nboth_beds$plot |>\n  wrap_plots(ncol = 1) &\n  theme(legend.position = \"none\")"
  },
  {
    "objectID": "qmd/initial_genome_check.html",
    "href": "qmd/initial_genome_check.html",
    "title": "1  Initial Genome Check",
    "section": "",
    "text": "Loading packages and setting up functions\n\n\ntoggle code\nlibrary(tidyverse)\nlibrary(patchwork)\nlibrary(prismatic)\nlibrary(ggforce)\nlibrary(geomtextpath)\nlibrary(glue)\nlibrary(here)\nsource(here(\"R/plot_defaults.R\"))\n\ncheck_paritions <- \\(genome = \"arcgaz_v1\"){\n  data <- read_tsv(here(\"data\", \"genomes\", glue(\"/{genome}.fa.gz.fai\")),\n                   col_names = c(\"seq_name\", \"length\", \"offset\", \"linebases\", \"linewidth\")) |>\n    left_join(read_tsv(here(\"data\", \"genomes\", \"partitions\", glue(\"{genome}_partitions.tsv\")),\n                       # glue(\"data/genomes/{spec}_partitions.tsv\"),\n                       col_names = c(\"seq_name\", 'partition'))) |>\n    mutate(idx = row_number(),\n           end_pos = cumsum(length))\n\n  partitions <- data |>\n    group_by(partition) |>\n    summarize(\n      n = n(),\n      length = sum(length),\n      end_pos = max(end_pos),\n      idx_start = min(idx),\n      idx_end = max(idx)\n    ) |>\n    ungroup() |>\n    mutate(failed = partition %in% c('02', '04', '06'))\n\n  p1 <- data |> \n    ggplot() +\n    geom_vline(data = partitions,\n               aes(xintercept = end_pos* 1e-9, color = partition),\n               alpha =.3) +\n    geom_step(aes(group = 1L, x = end_pos * 1e-9, y = idx, color = partition),\n              linewidth = .3, alpha = .3) +\n    geom_linerange(aes(group = 1L, xmin = lag(end_pos * 1e-9, default = 0),\n                       xmax = end_pos * 1e-9,\n                       y = idx, color = partition)) +\n    labs(subtitle = genome)\n\n  p2 <- partitions |>\n    ggplot(aes(x = partition, y = length, color = partition)) +\n    geom_bar(stat = \"identity\", aes(fill = after_scale(clr_alpha(color)))) +\n    # geom_bar(data = partitions |> filter(failed),\n    #          stat = \"identity\", fill = \"transparent\", color = \"black\", size = .5) +\n    geom_text(aes(y = length /2, label = n), angle = 90, hjust = -.2, \n              color = 'black', family = fnt_sel)+\n    labs(subtitle = \"sequence within partitions\")\n\n  p3 <- partitions |>\n    ggplot(aes(x = partition, y = n, color = partition)) +\n    geom_bar(stat = \"identity\", aes(fill = after_scale(clr_alpha(color)))) #+\n  # geom_bar(data = partitions |> filter(failed),\n  #          stat = \"identity\", fill = \"transparent\", color = \"black\", size = .5)\n\n  p4 <- data |>\n    ggplot(aes(x = log10(length))) +\n    geomtextpath::geom_textvline(data = tibble(x = c(100, 250, 500, 1000)),\n                                 aes(xintercept = log10(x),\n                                     label = glue(\"{x} bp\")),\n                                 linetype = 3, color = clrs[[2]],\n                                 family = fnt_sel,\n                                 size = 2.5, hjust = .85) +\n    geom_density(color = clr_lighten(clrs[[2]],.2),\n                 fill = clr_alpha(clr_lighten(clrs[[2]],.2))) +\n    scale_x_reverse() +\n    coord_flip(expand = 0, xlim = log10(c(1e8, 30)))+\n    labs(subtitle = \"scaffold sizes\")\n\n  clr_ln <- 'gray50'\n   \n p1 + (p2 / p3) + p4 +\n      plot_layout(widths = c(.7, 1, .3)) +\n      plot_annotation(title = genome) &\n      theme_minimal(base_family = fnt_sel) &\n      theme(legend.position = \"none\",\n            plot.subtitle = element_text(hjust = .5),\n            panel.grid = element_blank(),\n            panel.grid.minor = element_blank(),\n            axis.ticks = element_line(linewidth = .3, color = clr_ln),\n            axis.ticks.length = unit(3, 'pt'),\n            axis.line = element_line(color = clr_ln, linewidth = .4))\n}\n\npartition_genome <- \\(genome){\n  # read in the scaffold sizes from genome index file\n  data <- read_tsv(here(\"data\", \"genomes\", glue(\"{genome}.fa.gz.fai\")),\n                   col_names = c(\"scaff\", \"length\", \"offset\",\n                                 \"linebases\", \"linewidth\"))\n\n  # compute total genome length\n  total_length <- sum(data$length)\n\n  # compute genome wide end-coordinate for each scaffold,\n  # assign to partition by integer division by 0.1 of\n  # the total length and export as reference tsv file.\n  data2 <- data |>\n    mutate(end = cumsum(length),\n           partition_prep = str_pad(1 + end %/% (total_length/n_part + 1),\n                                    width = 2,\n                                    pad = 0),\n           partition_idx = as.numeric(factor(partition_prep)))\n\n  n_missing <- n_part - max(data2$partition_idx)\n  # print(glue(\"n_missing: {n_missing}, n_part: {n_part}, max_part: {max(data2$partition_idx)}\"))\n  if(n_missing > 0){\n    data3 <- data2 |>\n      group_by(partition_idx) |>\n      mutate(partition_adjust = if_else(partition_idx == max(partition_idx),\n                                        partition_idx + (row_number() - 1) %/% ( ceiling(n() / (n_missing + 1) )),\n                                        partition_idx)) |>\n      ungroup()\n  } else {\n    data3 <- data2 |>\n      mutate(partition_adjust = partition_idx)\n  }\n\n  data_out <- data3 |>\n    mutate(partition = str_pad(partition_adjust, width = 2, pad = 0)) |>\n    dplyr::select(scaff, partition) |>\n    write_tsv(file = here(\"data\", \"genomes\", \"partitions\", glue(\"{genome}_partitions.tsv\")),\n              col_names = FALSE)\n}\n\n\nPartition all genomes, where the labels indicate the following:\n\narcgaz_dt_h1: A. gazella dovetail assembly, haplotype 1\narcgaz_dt_h2: A. gazella dovetail assembly, haplotype 2\narcgaz_v3: A. gazella, previous reference genome (Peart et al. (2021), GCA_900642305.1)\nzalcal_v1: Zalophus californianus reference genome (Peart et al. (2021), GCF_009762305.2)\n\n\n\n\ntoggle code\nall_genomes <- c('arcgaz_dt_h1', 'arcgaz_dt_h2', 'arcgaz_v3', 'zalcal_v1')\nn_part <- 20\nall_genomes |> walk(partition_genome)\n\n\nCreating all plots and combining them into a patchwork.\n\n\ntoggle code\nall_genomes |>\n  map(check_paritions) |> \n  wrap_plots(ps, ncol = 1) &\n  scale_color_manual(values = c(\n    scales::colour_ramp(c(clrs[[1]], clr_lighten(clrs[[1]],.9)))(seq(0,1,length.out = ceiling(n_part/2))),\n    scales::colour_ramp(c(clr_lighten(clrs[[2]],.9), clrs[[2]]))(seq(0,1,length.out = ceiling(n_part/2)))))\n\n\n\n\n\n\n\n\n\nPeart, Claire R., Christina Williams, Saurabh D. Pophaly, Benjamin A. Neely, Frances M. D. Gulland, David J. Adams, Bee Ling Ng, et al. 2021. “Hi-C Scaffolded Short- and Long-Read Genome Assemblies of the California Sea Lion Are Broadly Consistent for Syntenic Inference Across 45 Million Years of Evolution.” Molecular Ecology Resources 21 (7): 2455–70. https://doi.org/10.1111/1755-0998.13443."
  }
]