'''
snakemake \
  -p -j 5 \
  --configfile workflow/config.yml \
  -R complete

snakemake \
  -p -j 5 \
  --configfile workflow/config.yml \
  -R numbering

snakemake \
  -p -j 5 \
  --configfile workflow/config.yml \
  -R lettering
'''
import os
from copy import deepcopy
import numpy as np
import pandas as pd
import re
import datetime

# configfile: "workflow/config.yml"

rule all:
    params:
      wd = os.getcwd()
    message:
     '''
     This pipeline is meant to be run in increments.
     Users can run the sub-workflow `numbering` (`numbers.smk`),
     the sub-workflow `lettering` (`letters.smk`),
     or the complete pipeline (`rule: complete`).
     '''

MASK_SUFFIX = config[ 'mask_suffix' ]
U_REF = config[ 'ref' ]
U_QUERY = config[ 'queries' ]
U_ALL = deepcopy(U_QUERY)
U_ALL.insert( 0, U_REF )
G_REF = U_REF + MASK_SUFFIX
G_QUERY = [ x + MASK_SUFFIX for x in U_QUERY ]
G_ALL = deepcopy(G_QUERY)
G_ALL.insert( 0, G_REF )

HAPLOTYPES = config['haplotypes']

# rule complete:
#     input:
#       expand("results/l_{let_in}.txt", let_in = ALL_LETTERS),
#       expand("results/n_{num_in}.txt", num_in = ALL_NUMBERS)

include: "./rules/repeat_mask.smk"
include: "./rules/align.smk"
include: "./rules/anchor.smk"
include: "./rules/genome_stats.smk"
include: "./rules/busco_and_blast.smk"

c_cactus = config[ 'cactus_sif' ]

P_NAME = config[ 'alignment_name' ]
SPEC_REF = config[ 'refName' ]
SPEC_QUERY = config[ 'species' ]
SPEC_ALL = deepcopy( SPEC_QUERY )
SPEC_ALL.insert( 0, SPEC_REF )
CACTUS_CORES=config[ 'cactus_cores' ]
GENOME_PARTITIONS = [ str(x + 1).zfill(2) for x in np.arange(20)]

c_conda = "$CDATA/apptainer_local/conda_byoe.sif"
c_vcfh = "$CDATA/apptainer_local/vcftools_haploid_v0.1.sif"

include: "./rules/initial_dl.smk"
include: "./rules/cactus_prep.smk"
include: "./rules/hal_conversions.smk"
include: "./rules/neutral_branch_lengths.smk"
include: "./rules/snp_to_vcf.smk"

# conditional kick-off of the actual cactus alignment
if os.path.exists("results/cactus/job_inventory.tsv"):
  include: "./rules/cactus_stepwise.smk"
